<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>System Settings - ZBase</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/static/css/admin.css">
</head>
<body>
    <!-- Top Navbar -->
    <%- include('../partials/navbar', {activePage: 'settings'}) %>

    <div class="container-fluid">
        <!-- Main content -->
        <main class="px-md-4 py-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
                <h1 class="h2">System Settings</h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <button type="button" class="btn btn-sm btn-primary" id="save-settings-btn">
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                </div>
            </div>

            <!-- Settings Form -->
            <div class="row">
                <div class="col-md-8">
                    <div class="alert alert-success d-none" id="settings-success">Settings saved successfully!</div>
                    <div class="alert alert-danger d-none" id="settings-error">Error saving settings!</div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Application Settings</h5>
                        </div>
                        <div class="card-body">
                            <form id="app-settings-form">
                                <div class="mb-3">
                                    <label for="app-name" class="form-label">Application Name</label>
                                    <input type="text" class="form-control" id="app-name" value="ZBase">
                                </div>
                                <div class="mb-3">
                                    <label for="app-description" class="form-label">Application Description</label>
                                    <textarea class="form-control" id="app-description" rows="2">A powerful authentication and authorization system built with NestJS and PostgreSQL.</textarea>
                                </div>
                                <div class="mb-3">
                                    <label for="app-version" class="form-label">Version</label>
                                    <input type="text" class="form-control" id="app-version" value="1.0.0">
                                </div>
                            </form>
                        </div>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Security Settings</h5>
                        </div>
                        <div class="card-body">
                            <form id="security-settings-form">
                                <div class="mb-3">
                                    <label for="session-timeout" class="form-label">Session Timeout (minutes)</label>
                                    <input type="number" class="form-control" id="session-timeout" value="60">
                                </div>
                                <div class="mb-3">
                                    <label for="max-login-attempts" class="form-label">Max Login Attempts</label>
                                    <input type="number" class="form-control" id="max-login-attempts" value="5">
                                </div>
                                <div class="mb-3">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="two-factor-auth" checked>
                                        <label class="form-check-label" for="two-factor-auth">Enable Two-Factor Authentication</label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="auto-logout" checked>
                                        <label class="form-check-label" for="auto-logout">Auto Logout on Inactivity</label>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Email Settings</h5>
                        </div>
                        <div class="card-body">
                            <form id="email-settings-form">
                                <div class="mb-3">
                                    <label for="smtp-host" class="form-label">SMTP Host</label>
                                    <input type="text" class="form-control" id="smtp-host" value="smtp.example.com">
                                </div>
                                <div class="mb-3">
                                    <label for="smtp-port" class="form-label">SMTP Port</label>
                                    <input type="number" class="form-control" id="smtp-port" value="587">
                                </div>
                                <div class="mb-3">
                                    <label for="smtp-user" class="form-label">SMTP Username</label>
                                    <input type="text" class="form-control" id="smtp-user" value="no-reply@example.com">
                                </div>
                                <div class="mb-3">
                                    <label for="smtp-pass" class="form-label">SMTP Password</label>
                                    <input type="password" class="form-control" id="smtp-pass" value="********">
                                </div>
                                <div class="mb-3">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="smtp-ssl" checked>
                                        <label class="form-check-label" for="smtp-ssl">Use SSL/TLS</label>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Settings Help</h5>
                        </div>
                        <div class="card-body">
                            <p>Configure your system settings here. Changes will take effect after saving.</p>
                            <p>For more information about each setting, hover over the label for a detailed explanation.</p>
                        </div>
                    </div>
                    
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">System Information</h5>
                        </div>
                        <div class="card-body">
                            <p><strong>Node.js Version:</strong> 18.x</p>
                            <p><strong>NestJS Version:</strong> 10.x</p>
                            <p><strong>Database:</strong> PostgreSQL</p>
                            <p><strong>Last Updated:</strong> <span id="last-updated-date">May 9, 2025</span></p>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if user is logged in and has admin role
            checkAuth();

            // Set user name in navbar
            const userData = localStorage.getItem('user');
            if (userData) {
                const user = JSON.parse(userData);
                document.getElementById('user-name').textContent = user.name;
            }            // Logout functionality
            document.getElementById('logout-btn').addEventListener('click', function(e) {
                e.preventDefault();
                
                // Call the server-side logout API first
                fetch('/api/auth/logout', {
                    method: 'POST',
                    credentials: 'include',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                })
                .then(response => response.json())
                .then(data => {
                    // Then clear local storage
                    localStorage.removeItem('token');
                    localStorage.removeItem('user');
                    // Redirect to login page after successful logout
                    window.location.href = '/login';
                })
                .catch(error => {
                    console.error('Logout error:', error);
                    // Still clear local storage and redirect even if there's an error
                    localStorage.removeItem('token');
                    localStorage.removeItem('user');
                    window.location.href = '/login';
                });
            });

            // Save settings functionality
            document.getElementById('save-settings-btn').addEventListener('click', function() {
                const successAlert = document.getElementById('settings-success');
                const errorAlert = document.getElementById('settings-error');
                
                // Hide alerts
                successAlert.classList.add('d-none');
                errorAlert.classList.add('d-none');
                
                // Simulate saving settings
                try {
                    // In a real application, you would send this data to the server
                    const appSettings = {
                        name: document.getElementById('app-name').value,
                        description: document.getElementById('app-description').value,
                        version: document.getElementById('app-version').value
                    };
                    
                    const securitySettings = {
                        sessionTimeout: document.getElementById('session-timeout').value,
                        maxLoginAttempts: document.getElementById('max-login-attempts').value,
                        twoFactorAuth: document.getElementById('two-factor-auth').checked,
                        autoLogout: document.getElementById('auto-logout').checked
                    };
                    
                    const emailSettings = {
                        smtpHost: document.getElementById('smtp-host').value,
                        smtpPort: document.getElementById('smtp-port').value,
                        smtpUser: document.getElementById('smtp-user').value,
                        smtpPass: document.getElementById('smtp-pass').value,
                        smtpSsl: document.getElementById('smtp-ssl').checked
                    };
                    
                    console.log('Settings to save:', { appSettings, securitySettings, emailSettings });
                    
                    // Update last updated date
                    document.getElementById('last-updated-date').textContent = new Date().toLocaleDateString();
                    
                    // Show success message
                    successAlert.classList.remove('d-none');
                    
                    // Scroll to top
                    window.scrollTo(0, 0);
                } catch (error) {
                    console.error('Error saving settings:', error);
                    errorAlert.textContent = 'Error saving settings: ' + error.message;
                    errorAlert.classList.remove('d-none');
                    window.scrollTo(0, 0);
                }
            });

            // Auth check function
            function checkAuth() {
                const token = localStorage.getItem('token');
                const userData = localStorage.getItem('user');
                
                if (!token || !userData) {
                    window.location.href = '/login';
                    return;
                }
                
                const user = JSON.parse(userData);
                if (!user.roles.includes('admin')) {
                    alert('You do not have permission to access this page');
                    window.location.href = '/dashboard';
                }
            }
        });
    </script>
</body>
</html>