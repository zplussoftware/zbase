<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/static/css/admin.css">
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse">
                <div class="position-sticky pt-3">
                    <div class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white">
                        <span class="fs-4 ms-3">ZBase Admin</span>
                    </div>
                    <hr>
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/admin">
                                <i class="bi bi-speedometer2 me-2"></i>
                                Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active text-white" href="/admin/users">
                                <i class="bi bi-people me-2"></i>
                                User Management
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-white" href="/admin/roles">
                                <i class="bi bi-shield-lock me-2"></i>
                                Role Management
                            </a>
                        </li>
                    </ul>
                    <hr>
                    <div class="dropdown ms-3">
                        <a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" id="user-dropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-circle me-2"></i>
                            <span id="user-name">Admin</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-dark text-small shadow" aria-labelledby="user-dropdown">
                            <li><a class="dropdown-item" href="/api/auth/profile">Profile</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#" id="logout-btn">Sign out</a></li>
                        </ul>
                    </div>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">Edit User</h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <a href="/admin/users" class="btn btn-sm btn-outline-secondary me-2">
                            <i class="bi bi-arrow-left"></i> Back to Users
                        </a>
                    </div>
                </div>

                <!-- Edit User Form -->
                <div class="row">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-body">
                                <div id="edit-error" class="alert alert-danger d-none"></div>
                                <div id="edit-success" class="alert alert-success d-none"></div>
                                <form id="edit-user-form">
                                    <input type="hidden" id="user-id" value="<%= user.id %>">
                                    <div class="mb-3">
                                        <label for="name" class="form-label">Name</label>
                                        <input type="text" class="form-control" id="name" name="name" value="<%= user.name %>" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="password" class="form-label">Password</label>
                                        <input type="password" class="form-control" id="password" name="password" placeholder="Leave blank to keep current password">
                                        <div class="form-text">Only fill this if you want to change the password.</div>
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Roles</label>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="admin" id="role-admin" 
                                                <% if(user.roles.includes('admin')) { %>checked<% } %>>
                                            <label class="form-check-label" for="role-admin">Admin</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="manager" id="role-manager"
                                                <% if(user.roles.includes('manager')) { %>checked<% } %>>
                                            <label class="form-check-label" for="role-manager">Manager</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="user" id="role-user"
                                                <% if(user.roles.includes('user')) { %>checked<% } %>>
                                            <label class="form-check-label" for="role-user">User</label>
                                        </div>
                                    </div>
                                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                        <a href="/admin/users" class="btn btn-secondary me-md-2">Cancel</a>
                                        <button type="button" class="btn btn-primary" id="update-user-btn">Save Changes</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card">
                            <div class="card-header">
                                User Information
                            </div>
                            <div class="card-body">
                                <p><strong>ID:</strong> <%= user.id %></p>
                                <p><strong>Created:</strong> <%= new Date(user.createdAt).toLocaleString() %></p>
                                <p><strong>Last Updated:</strong> <%= new Date(user.updatedAt || user.createdAt).toLocaleString() %></p>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if user is logged in and has admin role
            checkAuth();

            // Set user name in sidebar
            const userData = localStorage.getItem('user');
            if (userData) {
                const user = JSON.parse(userData);
                document.getElementById('user-name').textContent = user.name;
            }

            // Logout functionality
            document.getElementById('logout-btn').addEventListener('click', function(e) {
                e.preventDefault();
                localStorage.removeItem('token');
                localStorage.removeItem('user');
                window.location.href = '/login';
            });

            // Update user functionality
            document.getElementById('update-user-btn').addEventListener('click', async function() {
                const userId = document.getElementById('user-id').value;
                const nameInput = document.getElementById('name');
                const emailInput = document.getElementById('email');
                const passwordInput = document.getElementById('password');
                const roleAdmin = document.getElementById('role-admin');
                const roleManager = document.getElementById('role-manager');
                const roleUser = document.getElementById('role-user');
                const errorAlert = document.getElementById('edit-error');
                const successAlert = document.getElementById('edit-success');

                // Reset alerts
                errorAlert.classList.add('d-none');
                successAlert.classList.add('d-none');

                // Validate form
                if (!nameInput.value || !emailInput.value) {
                    errorAlert.textContent = 'Name and email are required';
                    errorAlert.classList.remove('d-none');
                    return;
                }

                // Collect roles
                const roles = [];
                if (roleAdmin.checked) roles.push('admin');
                if (roleManager.checked) roles.push('manager');
                if (roleUser.checked) roles.push('user');
                
                if (roles.length === 0) {
                    errorAlert.textContent = 'At least one role must be selected';
                    errorAlert.classList.remove('d-none');
                    return;
                }

                try {
                    const token = localStorage.getItem('token');
                    
                    // Prepare request body
                    const userData = {
                        name: nameInput.value,
                        email: emailInput.value,
                        roles: roles
                    };
                    
                    // Only include password if it's provided
                    if (passwordInput.value) {
                        userData.password = passwordInput.value;
                    }

                    const response = await fetch(`/api/users/${userId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify(userData)
                    });

                    if (!response.ok) {
                        const data = await response.json();
                        throw new Error(data.message || 'Failed to update user');
                    }

                    // Show success message
                    successAlert.textContent = 'User updated successfully';
                    successAlert.classList.remove('d-none');
                    
                    // Clear password field after successful update
                    passwordInput.value = '';

                    // Scroll to top
                    window.scrollTo(0, 0);
                    
                } catch (error) {
                    errorAlert.textContent = error.message;
                    errorAlert.classList.remove('d-none');
                    // Scroll to top
                    window.scrollTo(0, 0);
                }
            });

            // Auth check function
            function checkAuth() {
                const token = localStorage.getItem('token');
                const userData = localStorage.getItem('user');
                
                if (!token || !userData) {
                    window.location.href = '/login';
                    return;
                }
                
                const user = JSON.parse(userData);
                if (!user.roles.includes('admin')) {
                    alert('You do not have permission to access this page');
                    window.location.href = '/dashboard';
                }
            }
        });
    </script>
</body>
</html>