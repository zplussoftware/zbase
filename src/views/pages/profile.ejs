<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile - ZBase</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/static/css/admin.css">
</head>
<body>
    <!-- Top Navbar -->
    <%- include('../partials/navbar', {activePage: 'admin'}) %>

    <div class="container-fluid">
        <!-- Main content -->
        <main class="px-md-4 py-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
                <h1 class="h2">My Profile</h1>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <!-- Profile Picture Card -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Profile Picture</h5>
                        </div>
                        <div class="card-body text-center">
                            <div class="mb-3">
                                <img id="profile-image" src="/static/images/default-avatar.png" alt="Profile Picture" class="img-fluid rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;">
                            </div>
                            <form id="avatar-form" enctype="multipart/form-data">
                                <div class="mb-3">
                                    <input class="form-control" type="file" id="avatar-upload" accept="image/*">
                                </div>
                                <button type="submit" class="btn btn-primary">Update Picture</button>
                            </form>
                        </div>
                    </div>
                    
                    <!-- Account Information Card -->
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Account Information</h5>
                        </div>
                        <div class="card-body">
                            <p><strong>User ID:</strong> <%= profileData.id %></p>
                            <p><strong>Roles:</strong> <%= profileData.roles.join(', ') %></p>
                            <p><strong>Account Created:</strong> <%= new Date(profileData.createdAt).toLocaleString() %></p>
                            <p><strong>Last Updated:</strong> <%= new Date(profileData.updatedAt).toLocaleString() %></p>
                            <p><strong>Status:</strong> <span class="badge bg-<%= profileData.active ? 'success' : 'danger' %>">
                                <%= profileData.active ? 'Active' : 'Inactive' %>
                            </span></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Personal Information</h5>
                        </div>
                        <div class="card-body">
                            <div id="profile-error" class="alert alert-danger d-none"></div>
                            <div id="profile-success" class="alert alert-success d-none"></div>
                            
                            <form id="profile-form">
                                <div class="mb-3">
                                    <label for="name" class="form-label">Full Name</label>
                                    <input type="text" class="form-control" id="name" name="name" value="<%= profileData.name %>" required>
                                </div>
                                <div class="mb-3">
                                    <label for="email" class="form-label">Email Address</label>
                                    <input type="email" class="form-control" id="email" name="email" value="<%= profileData.email %>" required>
                                </div>
                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control" id="phone" name="phone" value="<%= profileData.phone || '' %>">
                                </div>
                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                </div>
                            </form>
                        </div>
                    </div>
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Change Password</h5>
                        </div>
                        <div class="card-body">
                            <div id="password-error" class="alert alert-danger d-none"></div>
                            <div id="password-success" class="alert alert-success d-none"></div>
                            
                            <form id="password-form">
                                <div class="mb-3">
                                    <label for="current-password" class="form-label">Current Password</label>
                                    <input type="password" class="form-control" id="current-password" name="currentPassword" required>
                                </div>
                                <div class="mb-3">
                                    <label for="new-password" class="form-label">New Password</label>
                                    <input type="password" class="form-control" id="new-password" name="newPassword" required>
                                </div>
                                <div class="mb-3">
                                    <label for="confirm-password" class="form-label">Confirm New Password</label>
                                    <input type="password" class="form-control" id="confirm-password" name="confirmPassword" required>
                                </div>
                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                    <button type="submit" class="btn btn-primary">Change Password</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check the initial state of avatar if it exists
            if ('<%= profileData.avatarUrl %>') {
                document.getElementById('profile-image').src = '<%= profileData.avatarUrl %>';
            }

            // Handle profile form submission
            const profileForm = document.getElementById('profile-form');
            profileForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const profileError = document.getElementById('profile-error');
                const profileSuccess = document.getElementById('profile-success');
                
                profileError.classList.add('d-none');
                profileSuccess.classList.add('d-none');
                
                try {
                    const userData = {
                        name: document.getElementById('name').value,
                        email: document.getElementById('email').value,
                        phone: document.getElementById('phone').value
                    };
                    
                    const response = await fetch('/api/auth/profile', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(userData),
                        credentials: 'include' // Include cookies
                    });
                    
                    if (!response.ok) {
                        const data = await response.json();
                        throw new Error(data.message || 'Failed to update profile');
                    }
                    
                    const result = await response.json();
                    
                    // Update user name in dropdown
                    document.getElementById('user-name').textContent = result.name;
                    
                    profileSuccess.textContent = 'Profile updated successfully';
                    profileSuccess.classList.remove('d-none');
                    
                } catch (error) {
                    profileError.textContent = error.message;
                    profileError.classList.remove('d-none');
                }
            });
              // Handle password form submission
            const passwordForm = document.getElementById('password-form');
            passwordForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const passwordError = document.getElementById('password-error');
                const passwordSuccess = document.getElementById('password-success');
                const currentPassword = document.getElementById('current-password').value;
                const newPassword = document.getElementById('new-password').value;
                const confirmPassword = document.getElementById('confirm-password').value;
                
                passwordError.classList.add('d-none');
                passwordSuccess.classList.add('d-none');
                
                // Validate passwords
                if (newPassword !== confirmPassword) {
                    passwordError.textContent = 'New passwords do not match';
                    passwordError.classList.remove('d-none');
                    return;
                }
                
                try {
                    const response = await fetch('/api/auth/change-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            currentPassword,
                            newPassword
                        }),
                        credentials: 'include' // Include cookies
                    });
                    
                    if (!response.ok) {
                        const data = await response.json();
                        throw new Error(data.message || 'Failed to change password');
                    }
                    
                    // Reset form
                    passwordForm.reset();
                    
                    passwordSuccess.textContent = 'Password changed successfully';
                    passwordSuccess.classList.remove('d-none');
                    
                } catch (error) {
                    passwordError.textContent = error.message;
                    passwordError.classList.remove('d-none');
                }
            });
              // Handle profile picture upload
            const avatarForm = document.getElementById('avatar-form');
            avatarForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const fileInput = document.getElementById('avatar-upload');
                if (!fileInput.files || fileInput.files.length === 0) {
                    return;
                }
                
                const formData = new FormData();
                formData.append('avatar', fileInput.files[0]);
                
                try {
                    const response = await fetch('/api/auth/avatar', {
                        method: 'POST',
                        body: formData,
                        credentials: 'include' // Include cookies
                    });
                    
                    if (!response.ok) {
                        throw new Error('Failed to upload avatar');
                    }
                    
                    const data = await response.json();
                    
                    // Update avatar preview
                    if (data.avatarUrl) {
                        document.getElementById('profile-image').src = data.avatarUrl;
                    }
                    
                    // Reset file input
                    fileInput.value = '';
                    
                } catch (error) {
                    alert(error.message);
                }
            });
            
            // Logout functionality
            document.getElementById('logout-btn').addEventListener('click', function(e) {
                e.preventDefault();
                
                fetch('/api/auth/logout', {
                    method: 'POST',
                    credentials: 'include' // Include cookies
                })
                .then(() => {
                    window.location.href = '/login';
                });
            });
        });
    </script>
</body>
</html>

